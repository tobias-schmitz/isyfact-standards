name: Release Maven
on:
  release:
    types: [released]

env:
  MAVEN_CLI_OPTS: '--batch-mode --errors --fail-at-end -T 1C'

jobs:

  Build:
    uses: tobias-schmitz/isyfact-standards/.github/workflows/template_maven_build.yml@master
    with:
      jdk-version: 17
      version: ${{ github.ref_name }}
      sonar-skip: true

  QualityGate:
    runs-on: ubuntu-latest
    needs: [Build]
    continue-on-error: true
    env:
      COMMIT_SHA: ${{ github.sha }}
      BRANCH_REF: release/2.x
      SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}
    steps:
      - name: SonarQube Quality Gate Check
        run: |
          
          curl "${SONAR_HOST_URL}/api/project_analyses/search?project=${SONAR_PROJECT_KEY}&branch=${BRANCH_REF/\//%2F}"
          ANALYSIS_ID=$( curl --silent "${SONAR_HOST_URL}/api/project_analyses/search?project=${SONAR_PROJECT_KEY}&branch=${BRANCH_REF/\//%2F}" | jq -r "first(.analyses[]|select(.revision==\"$COMMIT_SHA\").key)")
          
          if [[ -z $ANALYSIS_ID ]]; then
            echo "No Sonar Scan result found for commit $COMMIT_SHA"
            exit 1
          fi
          
          QG_STATUS=$(curl --silent "${SONAR_HOST_URL}/api/qualitygates/project_status?analysisId=${ANALYSIS_ID}" | jq -r ".projectStatus.status")
          
          if [[ $QG_STATUS == "OK" ]]; then
            echo "Quality Gate passed"
            exit 0
          elif [[ $QG_STATUS == "ERROR" ]]; then
            echo "Quality Gate failed"
            exit 1
          else
            echo "Could not find Quality Gate information for analysis id ${ANALYSIS_ID}"
            exit 1
          fi

  DependencyScan:
    runs-on: ubuntu-latest
    if: false
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup snyk
        uses: snyk/actions/setup@master
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Test for vulnerabilities
        run: snyk test --maven-aggregate-project --severity-threshold=critical --org=$SNYK_ORG_ID --target-reference=master

  Deploy:
    needs: [Build, QualityGate] #, DependencyScan]
    uses: tobias-schmitz/isyfact-standards/.github/workflows/template_maven_deploy.yml@master
    with:
      environment: Release
      version: ${{ github.ref_name }}
      maven-opts: '-s ./.github/settings.xml'
      deploy-server-id: ossrh
      sbom: true
      sign: true
    secrets:
      GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  Monitor:
    runs-on: ubuntu-latest
    needs: [Deploy]
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup snyk
        uses: snyk/actions/setup@master
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Create to dependency snapshot to monitor for vulnerabilities
        run: >
          snyk monitor 
          --maven-aggregate-project 
          --target-reference=${{ github.ref_name }} --org=$SNYK_ORG_ID